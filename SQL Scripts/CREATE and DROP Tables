 --SQL CREATE

CREATE DATABASE DealsOnWheels;
USE DealsOnWheels;

--User tables
CREATE TABLE tb_UserCredentials (
    UserID INT IDENTITY NOT NULL PRIMARY KEY,
    EmailAddress varchar(255) NOT NULL UNIQUE,
    Password varchar(255) NOT NULL
);


CREATE TABLE tb_UserPersonalDetails(
    UserID int NOT NULL PRIMARY KEY,
    FirstName varchar(255) NOT NULL,
    LastName varchar(255) NOT NULL,
    IDNumber varchar(255) NOT NULL,
);


CREATE TABLE tb_UserAddressDetails(
    UserID int NOT NULL PRIMARY KEY,
    StreetAddress varchar(255) NOT NULL,
    City varchar(50) NOT NULL,
    Country varchar(50) NOT NULL,
    State varchar(50) NOT NULL,
    ZipCode varchar(10) NOT NULL,
);


CREATE TABLE tb_UserContactDetails(
    UserID int NOT NULL PRIMARY KEY,
    PhoneNumber varchar(10) NOT NULL
);


CREATE TABLE tb_UserPaymentDetails(
    UserID int NOT NULL PRIMARY KEY,
    AccountNumber varchar(25) NOT NULL
);

--User Table Contraints
ALTER TABLE tb_UserPersonalDetails
ADD CONSTRAINT FK_UserPersonalDetailsID
FOREIGN KEY (UserID) REFERENCES tb_UserCredentials(UserID);

ALTER TABLE tb_UserContactDetails
ADD CONSTRAINT FK_UserContactDetailsID
FOREIGN KEY (UserID) REFERENCES tb_UserCredentials(UserID);

ALTER TABLE tb_UserPaymentDetails
ADD CONSTRAINT FK_UserPaymentDetailsID
FOREIGN KEY (UserID) REFERENCES tb_UserCredentials(UserID);

ALTER TABLE tb_UserAddressDetails
ADD CONSTRAINT FK_UserAddressDetails
FOREIGN KEY (UserID) REFERENCES tb_UserCredentials(UserID);



--UserTable Views
CREATE VIEW [vw_UserInfo] AS
SELECT upd.UserID, upd.FirstName, upd.LastName, uc.EmailAddress, ucd.PhoneNumber, uad.StreetAddress, uad.City, uad.Country, uad.State, uad.ZipCode
	FROM tb_UserPersonalDetails upd
		JOIN tb_UserCredentials uc 
		ON upd.UserId = uc.UserId
			JOIN tb_UserAddressDetails uad 
			ON uc.UserId = uad.UserId
				JOIN tb_UserContactDetails ucd
					on uad.UserID = ucd.UserID;







--VehicleTables
CREATE TABLE tb_VehicleManufacturer(
    VehicleID int NOT NULL PRIMARY KEY,
    ManufacturerID int NOT NULL
);


CREATE TABLE tb_VehicleImage(
    VehicleID int NOT NULL PRIMARY KEY,
    ImageURL varchar(1000)  NULL
);


CREATE TABLE tb_Manufacturer(
    ManufacturerID INT IDENTITY NOT NULL PRIMARY KEY,
    ManufacturerName varchar(50) NOT NULL
);

CREATE TABLE tb_Model(
    ModelID INT IDENTITY NOT NULL PRIMARY KEY,
    ModelName varchar(50) NOT NULL
);

CREATE TABLE tb_VehicleModel(
    VehicleID int NOT NULL PRIMARY KEY,
    ModelID int NOT NULL,
);


CREATE TABLE tb_VehicleSpecs(
    VehicleID INT IDENTITY NOT NULL PRIMARY KEY,
    Year int NOT NULL,
    Displacement float NOT NULL,
    FuelType varchar(255) NOT NULL,
    Power float NOT NULL,	
    Torque float NOT NULL,
    Weight float NOT NULL,	
    BodyTypeID int NOT NULL,
    AdditionalInfo varchar(1000) NOT NULL,
    Price float NOT NULL,
    Transmission varchar(50) NOT NULL,
);


CREATE TABLE tb_VehicleBodyType(
    BodyTypeID INT IDENTITY NOT NULL PRIMARY KEY,
    BodyType varchar(50) NOT NULL
);



--Vehicle Table Contraints
ALTER TABLE tb_VehicleManufacturer
ADD CONSTRAINT FK_VehicleManufacturerID
FOREIGN KEY (ManufacturerID) REFERENCES tb_Manufacturer(ManufacturerID);

ALTER TABLE tb_VehicleImage
ADD CONSTRAINT FK_VehicleImage
FOREIGN KEY (VehicleID) REFERENCES tb_VehicleSpecs(VehicleID);

ALTER TABLE tb_VehicleModel
ADD CONSTRAINT FK_VehicleModelInfoID
FOREIGN KEY (VehicleID) REFERENCES tb_VehicleSpecs(VehicleID);

ALTER TABLE tb_VehicleSpecs
ADD CONSTRAINT FK_VehicleBodyTypeID
FOREIGN KEY (BodyTypeID) REFERENCES tb_VehicleBodyType(BodyTypeID);


--Vehicle Tables Views
CREATE VIEW [vw_VehicleInfo] AS
SELECT vm.VehicleID, m.ManufacturerID, m.ManufacturerName, mo.ModelName, vs.Year, vs.Price, vs.FuelType, vs.Transmission, vs.Displacement, vs.Power, vs.Torque, vs.Weight, vbt.BodyType, vs.AdditionalInfo
	FROM tb_VehicleBodyType vbt
		JOIN tb_VehicleSpecs vs
		ON vbt.BodyTypeID = vs.BodyTypeID
			JOIN tb_VehicleManufacturer vm
			ON vs.VehicleId = vm.VehicleId
				JOIN tb_Manufacturer m 
				ON vm.ManufacturerID = m.ManufacturerID
					JOIN tb_VehicleModel vmo 
					ON vs.VehicleId = vmo.VehicleId
						JOIN tb_Model mo 
						ON vmo.ModelId = mo.ModelId



--Transaction Tables


CREATE TABLE tb_VehicleTransaction(
    TransactionID INT IDENTITY NOT NULL PRIMARY KEY,
    VehicleID int NOT NULL
);

CREATE TABLE tb_AvailableVehicles(
    VehicleID int NOT NULL PRIMARY KEY,
    DateAdded DATE NOT NULL
);

CREATE TABLE tb_SoldVehicles(
    VehicleID int NOT NULL PRIMARY KEY,
    DateSold DATE NOT NULL,
    UserID int NOT NULL,
);


--Transaction Table Contraints
ALTER TABLE tb_VehicleTransaction
ADD CONSTRAINT FK_TransactionVehicleID
FOREIGN KEY (VehicleID) REFERENCES tb_VehicleSpecs(VehicleID);


ALTER TABLE tb_SoldVehicles
ADD CONSTRAINT FK_UserVehicleID
FOREIGN KEY (UserID) REFERENCES tb_UserCredentials(UserID);


--Transaction Table Views
CREATE VIEW [vw_Transactions] AS
SELECT vt.TransactionID, vs.VehicleID, sv.DateSold, av.DateAdded, vs.Price, sv.UserId
	FROM tb_VehicleTransaction vt
		JOIN tb_VehicleSpecs vs
		ON vt.VehicleID = vs.VehicleID
			JOIN tb_SoldVehicles sv
			ON vs.VehicleId = sv.VehicleId
				JOIN tb_AvailableVehicles av 
				ON sv.VehicleId = av.VehicleId


CREATE VIEW [vw_TransactionInfo] AS
SELECT vt.TransactionID, vs.VehicleID, m.ManufacturerName, mo.ModelName, vs.Year, vs.Price, vs.FuelType, vs.Transmission, vs.Displacement, vs.Power, vs.Torque, vs.Weight, vbt.BodyType, vs.AdditionalInfo, sv.DateSold, av.DateAdded, upd.UserID, upd.FirstName, upd.LastName, upyd.AccountNumber   
	FROM tb_VehicleBodyType vbt
		JOIN tb_VehicleSpecs vs
		ON vbt.BodyTypeID = vs.BodyTypeID
			JOIN tb_SoldVehicles sv
			ON vs.VehicleId = sv.VehicleId
					JOIN tb_AvailableVehicles av 
					ON sv.VehicleId = av.VehicleId
						JOIN tb_VehicleTransaction vt
						ON av.VehicleId = vt.VehicleId
							JOIN tb_VehicleManufacturer vm
							ON vs.VehicleId = vm.VehicleId
								JOIN tb_Manufacturer m 
								ON vm.ManufacturerID = m.ManufacturerID
									JOIN tb_VehicleModel vmo 
									ON vs.VehicleId = vmo.VehicleId
										JOIN tb_Model mo 
										ON vmo.ModelId = mo.ModelId
											JOIN tb_UserPersonalDetails upd
											ON sv.UserID = upd.UserID
												JOIN tb_UserPaymentDetails upyd
												ON upd.UserID = upyd.UserID

											







--SQL DROP/DELETE

DROP DATABASE DealsOnWheels;

--User tables
DROP TABLE tb_UserCredentials;
DROP TABLE tb_UserPersonalDetails;
DROP TABLE tb_UserAddressDetails;
DROP TABLE tb_UserContactDetails;
DROP TABLE tb_UserPaymentDetails;
DROP VIEW vw_UserInfo;


--Vehicle tables
DROP TABLE tb_VehicleManufacturer;
DROP TABLE tb_Manufacturer;
DROP TABLE tb_Model;
DROP TABLE tb_VehicleModel;
DROP TABLE tb_VehicleSpecs;
DROP TABLE tb_VehicleBodyType;
DROP CONSTRAINT FK_VehicleManufacturerID;
DROP CONSTRAINT FK_VehicleBodyTypeID;
DROP CONSTRAINT FK_VehicleModelInfoID;
DROP VIEW vw_VehicleInfo;


--Transaction Tables
DROP TABLE tb_VehicleTransaction;
DROP TABLE tb_AvailableVehicles;
DROP TABLE tb_SoldVehicles;
DROP CONSTRAINT FK_TransactionVehicleID;
DROP CONSTRAINT FK_UserVehicleID;
DROP VIEW vw_Transactions;
DROP VIEW vw_TransactionInfo;






